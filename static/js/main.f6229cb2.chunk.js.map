{"version":3,"sources":["logo.svg","serviceWorker.js","redux/reducer.js","component/item.js","component/list.js","component/editor.js","index.js","App.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","data","localStorage","getItem","defaultState","editIndex","inputValue","todo","JSON","parse","trim","inputLegal","reducer","result","todoList","action","type","legalInput","value","index","text","splice","slice","push","status","setItem","stringify","connect","dispatch","modifyTodoItem","e","item","isBeingEdited","className","icon","faCheck","faFlag","role","aria-label","Button","variant","onClick","faUndo","faPen","faTimes","props","Table","responsive","striped","bordered","hover","map","key","Editor","add","save","abort","change","target","textInput","setTextInputRef","element","this","focus","buttonTitle","buttonAction","faPlus","faFile","InputGroup","FormControl","onKeyPress","onChange","placeholder","aria-describedby","ref","Append","disabled","React","Component","store","createStore","applyMiddleware","thunk","ReactDOM","render","src","logo","alt","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f6229cb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.37fbbb52.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nlet data = localStorage.getItem('todoState');\n    data = data ? JSON.parse(data) : {};\n\nconst defaultState = {\n  editIndex:-1,\n  inputValue:\"\",\n  todo:[],\n\n  ...data\n}\n\nif ( defaultState.inputValue.trim() === '' )\n  defaultState.inputLegal = false;\n\nconst reducer = ( state=defaultState, action ) => {\n\n  let result, todoList, {type} = action;\n\n  switch (type){\n\n    case \"INPUT\":\n      let legalInput = action.value.trim() !== ''\n\n      result = {\n        ...state,\n        inputLegal: legalInput,\n        inputValue: action.value\n      };\n      break;\n\n    case \"EDIT\":\n      result = {\n        ...state,\n        inputValue: state.todo[action.index].text,\n        editIndex:  action.index\n      };\n      break;\n\n    case \"SAVE\":\n      if ( state.inputValue.trim() === '' ){\n        result = state;\n        break;\n      }\n\n      todoList = [...state.todo];\n\n      todoList[state.editIndex] = {\n        ...todoList[state.editIndex],\n        text: state.inputValue\n      };\n\n      result = {\n        ...state,\n        todo:       todoList,\n        inputValue: \"\",\n        inputLegal: false,\n        editIndex:  -1\n      };\n      break;\n\n    case \"ABORT\":\n      result = {\n        ...state,\n        inputValue: \"\",\n        inputLegal: false,\n        editIndex:  -1\n      };\n      break;\n\n    case \"DEL\":\n      todoList = [...state.todo];\n      todoList.splice(action.index,1);\n      result = {\n        ...state,\n        todo: todoList\n      };\n      break;\n\n    case \"ADD\":\n      if ( state.inputValue.trim() === '' ){\n        result = state;\n        break;\n      }\n      todoList = state.todo.slice();\n      todoList.push({\n        text:   state.inputValue,\n        status: 'todo'\n      });\n      result = {\n        ...state,\n        todo:       todoList,\n        inputValue: \"\",\n        inputLegal: false\n      };\n      break;\n\n      case \"DONE\":\n        todoList = [...state.todo];\n\n        todoList[action.index] = {\n          ...todoList[action.index],\n          status: 'done'\n        };\n\n        result = {\n          ...state,\n          todo: todoList\n        };\n        break;\n\n      case \"UNDO\":\n        todoList = [...state.todo];\n\n        todoList[action.index] = {\n          ...todoList[action.index],\n          status: 'todo'\n        };\n\n      result = {\n        ...state,\n        todo: todoList\n      };\n      break;\n\n    default:\n      result = state;\n      break;\n  }\n\n  localStorage.setItem( 'todoState', JSON.stringify(result) );\n\n  return result;\n}\n\nexport default reducer\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faTimes, faPen, faUndo, faFlag } from '@fortawesome/free-solid-svg-icons'\n\nfunction Item({item,index,editIndex,modifyTodoItem,dispatch}){\n  let { text, status } = item\n  let isBeingEdited = index === editIndex ? 'editing' : null;\n  return (\n    <tr className={isBeingEdited}>\n      <td>{index}</td>\n      <td>{text}</td>\n      <td>{ status === 'done'\n            ? <FontAwesomeIcon icon={faCheck} />\n            : <FontAwesomeIcon icon={faFlag} />\n           }\n      </td>\n      <td>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          { status === 'done'\n            ? <Button variant=\"warning\" onClick={modifyTodoItem(\"UNDO\",index)}>\n                <FontAwesomeIcon icon={faUndo} />\n              </Button>\n            : <Button variant=\"success\" onClick={modifyTodoItem(\"DONE\",index)}>\n                <FontAwesomeIcon icon={faCheck} />\n              </Button>\n          }\n          <Button variant=\"warning\" onClick={modifyTodoItem(\"EDIT\",index)}>\n            <FontAwesomeIcon icon={faPen} />\n          </Button>\n          <Button variant=\"danger\" onClick={modifyTodoItem(\"DEL\", index)}>\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n        </div>\n      </td>\n    </tr> )\n}\n\nexport default connect(\n  state => { return state },\n  (dispatch)=>{\n    return {\n      modifyTodoItem: (type,index)=>{\n        return (e)=>{\n          dispatch({ type:type, index:index })\n    }}}}\n)(Item)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Table } from 'react-bootstrap'\nimport Item from './item'\n\nfunction List(props){\n  return (\n    <Table responsive striped bordered hover variant=\"dark\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Todo</th>\n          <th>Status</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n      { props.todo.map( (item,index)=>{\n          return <Item key={index} item={item} index={index}/>\n      })}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default connect( state=>{ return state } )(List)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { InputGroup, FormControl, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFile, faPlus, faUndo } from '@fortawesome/free-solid-svg-icons'\n\nclass Editor extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.textInput = null;\n\n    this.setTextInputRef = element => {\n      this.textInput = element;\n    };\n  }\n\n  componentDidMount(){\n    if (this.textInput) this.textInput.focus();\n  }\n\n  componentDidUpdate(){\n    if ( this.textInput && this.props.editIndex !== -1 ) this.textInput.focus();\n  }\n\n  add   = (e)=>{ this.props.dispatch({ type:\"ADD\"   })}\n  save  = (e)=>{ this.props.dispatch({ type:\"SAVE\"  })}\n  abort = (e)=>{ this.props.dispatch({ type:\"ABORT\" })}\n\n  change = (e)=>{ this.props.dispatch({\n    type:\"INPUT\", value:e.target.value\n  })}\n\n  render(){\n    let { editIndex, inputValue, inputLegal } = this.props;\n    let buttonTitle, buttonAction;\n\n    if ( editIndex === -1 ) {\n      buttonTitle = <FontAwesomeIcon icon={faPlus} />\n      buttonAction = this.add\n    }\n    else {\n      buttonTitle = <FontAwesomeIcon icon={faFile} />\n      buttonAction = this.save\n    }\n\n    const keyAction = e => {\n      if ( inputLegal && e.key === \"Enter\" ) buttonAction(e);\n    }\n\n    return (\n      <InputGroup className=\"mb-3\">\n        <FormControl\n          onKeyPress={keyAction}\n          onChange={this.change}\n          value={inputValue}\n          placeholder=\"Todo Description\"\n          aria-label=\"Todo Description\"\n          aria-describedby=\"basic-addon2\"\n          ref={this.setTextInputRef}\n          />\n        <InputGroup.Append>\n          { editIndex === -1 ? null :\n            <Button\n              onClick={this.abort}\n              value={inputValue}\n              variant=\"danger\">\n              <FontAwesomeIcon icon={faUndo} />\n            </Button> }\n          <Button\n            disabled={!inputLegal}\n            onClick={buttonAction}\n            value={inputValue}\n            variant=\"success\">\n            {buttonTitle}\n          </Button>\n        </InputGroup.Append>\n    </InputGroup> )\n}}\n\nexport default connect( state => { return state } )(Editor)\n","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './redux/reducer'\nimport thunk from 'redux-thunk'\n\nimport App from './App';\n\nlet store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n","\nimport React from 'react';\nimport List   from './component/list'\nimport Editor from './component/editor'\n\nimport logo from './logo.svg'\n\nexport default function App(props) { return (\n  <div className=\"App\">\n    <img src={logo} alt=\"todoReduction logo\"/>\n    <Editor/>\n    <List/>\n  </div> )}\n"],"sourceRoot":""}